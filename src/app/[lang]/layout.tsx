import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.scss";
import Header from "./components/header";
import { Footer, IFooterProps } from "./components/footer";
import { FC } from "react";
import getLayoutData from "@api/layout";
import { AntdRegistry } from "@ant-design/nextjs-registry";
import ThemeContextProvider from "@/stores/theme";
import UserAgentProvider from "@/stores/userAgent";
import styles from "./page.module.scss";
import Script from "next/script";
import { getIsMobile } from "@/utils";
import { headers } from "next/headers";
import { getDictionary } from "./dictionaries";

const inter = Inter({ subsets: ["latin"] });

export interface ILayoutProps {
  footerData: IFooterProps;
}

export async function generateMetadata(): Promise<Metadata> {
  const headersList = headers();

  const isMobile = getIsMobile(headersList.get("user-agent"));
  return {
    title: isMobile ? "mobile" : "pc",
    description: "Generated by create next app: " + headersList.get("x-url"),
  };
}

const RootLayout: FC<{
  children: JSX.Element;
  params: { lang: string };
}> = async ({ children, params }) => {
  const data = await getLayoutData();
  const headersList = headers();
  const isMobile = getIsMobile(headersList.get("user-agent"));
  const dict = await getDictionary(params.lang);

  return (
    <html lang={params.lang} suppressHydrationWarning>
      <ThemeContextProvider>
        <UserAgentProvider>
          <body className={inter.className}>
            <Header isMobile={isMobile} dict={dict} />
            <AntdRegistry>
              <main className={styles.main}>{children}</main>
            </AntdRegistry>
            <Footer {...data} />
            <Script id="theme-script" strategy="beforeInteractive">
              {`const item = localStorage.getItem('theme') || 'light';
          localStorage.setItem('theme', item);
          document.getElementsByTagName('html')[0].dataset.theme = item;`}
            </Script>
          </body>
        </UserAgentProvider>
      </ThemeContextProvider>
    </html>
  );
};

export default RootLayout;
